For a given singly linked list of integers, find and return the node present at the middle of the list.
Sample Input 1 :
1
1 2 3 4 5 -1
Sample Output 1 :
3
Sample Input 2 :
2 
-1
1 2 3 4 -1
Sample Output 2 :
2
public class Solution {
    
    public static Node<Integer> midPoint(Node<Integer> head) {
        //Your code goes here
        Node<Integer> slow=head;
        Node<Integer> fast=head;
        while(fast.next!=null && fast.next.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        return slow;
    }

}
TC:O(N)
SC:O(1)
